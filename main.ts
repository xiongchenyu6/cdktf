/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DnsRecord } from "./.gen/providers/cloudflare/dns-record";
import { CloudflareProvider } from "./.gen/providers/cloudflare/provider";
import { Zone } from "./.gen/providers/cloudflare/zone";

import { Construct } from "constructs";
import { App, TerraformStack, CloudBackend, NamedCloudWorkspace, VariableType, TerraformVariable  } from "cdktf";

class MyStack extends TerraformStack {
  constructor(scope: Construct, id: string) {
    super(scope, id);

    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
You can read more about this at https://cdk.tf/variables*/
    const cloudflareApiToken = new TerraformVariable(
      this,
      "cloudflare_api_token",
      {
        type: VariableType.STRING,
      }
    );

    function createZone(scope: Construct, name: string, zoneName: string) {
      return new Zone(scope, name, {
        account: { id: "2764ae0fd9a5cb92c9ac67708620e54c" },
        name: zoneName,
      });
    }

    function createDnsRecord(
      scope: Construct,
      name: string,
      zone: Zone,
      recordName: string,
      content: string,
      proxied: boolean
    ) {
      return new DnsRecord(scope, name, {
        content,
        name: recordName,
        proxied,
        ttl: 1,
        type: "A",
        zoneId: zone.id,
      });
    }

    const autolife = createZone(this, "autolife", "autolife-robotics.me");
    createZone(this, "autolife-ai", "autolife.ai");
    const autolifeTech = createZone(this, "autolife-tech", "auto-life.tech");

    new CloudflareProvider(this, "cloudflare", {
      apiToken: cloudflareApiToken.stringValue,
    });

    createDnsRecord(this, "frp_dashboard_autolife", autolife, "frp-dashboard", "47.128.253.85", false);
    createDnsRecord(this, "mail-www", autolifeTech, "auto-life.tech", "43.156.66.157", false);
    createDnsRecord(this, "mainpage_autolife", autolife, "autolife-robotics.me", "47.128.253.85", true);
    createDnsRecord(this, "mngt_autolife", autolife, "mngt", "47.128.253.85", false);
    createDnsRecord(this, "netbird_autolife", autolife, "netbird", "47.128.253.85", false);
    createDnsRecord(this, "rust-server_autolife", autolife, "rust-server", "47.128.253.85", false);
    createDnsRecord(this, "vr_sg_autolife", autolife, "vr-sg", "47.128.253.85", false);
    createDnsRecord(this, "www_autolife", autolife, "www", "47.128.253.85", true);
  }
}

const app = new App({
  skipValidation: true
});
const stack = new MyStack(app, "cdktf");
new CloudBackend(stack, {
  hostname: "app.terraform.io",
  organization: "autolife-robotics",
  workspaces: new NamedCloudWorkspace("cdktf"),
});
app.synth();
